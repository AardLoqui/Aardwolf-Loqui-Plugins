<muclient>
<plugin
   name="Nok3_Rank_Points"
   author="Nokfah"
   id="441d94e9e4cdfb78145efd75"
   language="Lua"
   purpose="Calculate the rank points for all loqui members"   
   save_state="y"
   version="1.0"
   >
</plugin>

<aliases>
   <alias
      regexp="y" match="^getrank (.*)$"
      enabled="y" script="Rank"
   ></alias>
</aliases>

<triggers>
-- Landion is a Ringleader of Loqui.
   <trigger group="capture"
      regexp="y" match="^.* is an? (?<rank>.*) of Loqui\."
      enabled="n" script="CurrentRank"
   ></trigger>

-- Quests Complete : [  15549]  Quests Failed: [   761]  Gquests Won: [      0]
   <trigger group="capture"
      regexp="y" match="^Quests Complete : \[\s*(?<quest>[0-9]+)\]  Quests Failed: \[\s*[0-9]+\]  Gquests Won: \[\s*(?<gq>[0-9]+)\]\s*$"
      enabled="n" script="QuestGQ"
   ></trigger>

-- Campaigns Done  : [   2896]  Duels Won    : [    18]  
   <trigger group="capture"                                                
      regexp="y" match="^Campaigns Done  : \[\s*(?<cp>[0-9]+)\]"
      enabled="n" script="CP"
   ></trigger>

-- PK Victories    : [     10]  PK Losses    : [    64]
   <trigger group="capture"
      regexp="y" match="^PK Victories    : \[\s*(?<pk>[0-9]+)\]  PK Losses    : \[\s*[0-9]+\]\s*$"
      enabled="n" script="PK"
   ></trigger>

-- Total Wars  : [  34]  Won: [  13]  Lost: [  21]   Kills: [  18]
   <trigger group="capture"
      regexp="y" match="^Total Wars  : \[\s*[0-9]+\]  Won: \[\s*(?<warWin>[0-9]+)\]  Lost: \[\s*[0-9]+\]   Kills: \[\s*(?<warKill>[0-9]+)\]$"
      enabled="n" script="War"
   ></trigger>

   --Total Wars  - Won: [  59]  Kills: [  61]
   <trigger group="capture"
      regexp="y" match="^Total Wars  - Won: \[\s*(?<warWin>[0-9]+)\]  Kills: \[\s*(?<warKill>[0-9]+)\]$"
      enabled="n" script="War"
   ></trigger>

   -- Farringar has donated 32,000,001 gold and 0 qp to the clan.
   <trigger group="capture"
      regexp="y" match="^.* has donated (.*) gold and .* qp to the clan\.$"
      enabled="n" script="Gold"
   ></trigger>

   -- No one of that name is playing.
   <trigger group="capture"
      regexp="y" match="^No one of that name is playing\.$"
      enabled="n" script="NotOnline"
   ></trigger>
</triggers>

<script>
<![CDATA[
   require "wait"

   local ranks = {
      [0] = "Malcontent",
      [250] = "Agitator",
      [550] = "Protagonist",
      [1000] = "Rebel",
      [1700] = "Activist",
      [3200] = "Revolutionary"
   }

   local rankNumbers = {
      ["Malcontent"] = 1,
      ["Agitator"] = 2,
      ["Protagonist"] = 3,
      ["Rebel"] = 4,
      ["Activist"] = 5,
      ["Revolutionary"] = 6,
      ["Ringleader"] = 7, 
   }

   local points = {
      gold = 1/1000000,
      pk = 5,
      gq = 5,
      warWin = 2,
      warKill = 2,
      level = 1/5,
      cp = 3/4,
      quest = 1/10,
      pup = 1/15
   }
   
   local baseStats = {
      Chosig = { gold = 125, pk = 0, gq = 7, warWin = 1, warKill = 1, level = 263, cp = 24, quest = 617, pup = 0 },
      Gawyn = { gold = 0, pk = 0, gq = 0, warWin = 0, warKill = 0, level = 888, cp = 27, quest = 464, pup = 0 },
      Vernis = { gold = 0, pk = 0, gq = 0, warWin = 0, warKill = 12, level = 610, cp = 22, quest = 574, pup = 0 },
      Attikus = { gold = 0, pk = 0, gq = 0, warWin = 1, warKill = 0, level = 1683, cp = 116, quest = 1482, pup = 0 },
      Farringar = { gold = 0, pk = 23, gq = 7, warWin = 48, warKill = 51, level = 5087, cp = 145, quest = 3794, pup = 234 },
      Savvy = { gold = 0, pk = 0, gq = 53, warWin = 67, warKill = 87, level = 1465, cp = 589, quest = 10439, pup = 888 },      
      Dranged = { gold = -992, pk = 0, gq = 0, warWin = 1, warKill = 2, level = 1610, cp = 140, quest = 2156, pup = 1154 },
      Mavelost = { gold = 0, pk = 0, gq = 34, warWin = 0, warKill = 3, level = 1143, cp = 71, quest = 1707, pup = 0 },
      Bellagree = { gold = 0, pk = 4, gq = 0, warWin = 13, warKill = 16, level = 6103, cp = 150, quest = 3321, pup = 590 },
      Aldehyde = { gold = 0, pk = 0, gq = 2, warWin = 1, warKill = 0, level = 1249, cp = 81, quest = 1691, pup = 47 },
      Madcatz = { gold = 0, pk = 1, gq = 12, warWin = 50, warKill = 92, level = 2799, cp = 39, quest = 6749, pup = 87 },      
      Baurus = { gold = 0, pk = 5, gq = 2, warWin = 13, warKill = 13, level = 2259, cp = 313, quest = 3023, pup = 4720 },
      Cares = { gold = 0, pk = 2, gq = 225, warWin = 4, warKill = 16, level = 16303, cp = 2053, quest = 7650, pup = 4451 },      
      Rokshel = { gold = 0, pk = 2, gq = 0, warWin = 0, warKill = 0, level = 3251, cp = 557, quest = 672, pup = 260 },
      Adam = { gold = 0, pk = 106, gq = 6, warWin = 0, warKill = 0, level = 71085, cp = 1539, quest = 10495, pup = 96565 },
      Limunious = { gold = 0, pk = 10, gq = 70, warWin = 24, warKill = 32, level = 16884, cp = 1241, quest = 11014, pup = 156892 },
      Slinks = { gold = 0, pk = 24, gq = 74, warWin = 10, warKill = 10, level = 16884, cp = 1073, quest = 5356, pup = 48936 },
      Noegel = { gold = 0, pk = 37, gq = 9, warWin = 3, warKill = 4, level = 13197, cp = 243, quest = 6156, pup = 280 },
      Bodhi = { gold = 0, pk = 1, gq = 0, warWin = 0, warKill = 0, level = 11963, cp = 4475, quest = 6026, pup = 28470 },
      Durel = { gold = 0, pk = 0, gq = 133, warWin = 0, warKill = 0, level = 2814, cp = 681, quest = 6131, pup = 9927 },
      Adra = { gold = 0, pk = 1, gq = 0, warWin = 0, warKill = 0, level = 9282, cp = 919, quest = 5091, pup = 51 }
   }

   local currentStats = {}	
   local tellRequest = false
   local tellPlayer = ""
	
   function OnPluginBroadcast (msg, id, name, text)
      -- Look for GMCP handler.
      if (text == "comm.channel") then
         res, gmcparg = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","comm.channel")             
         luastmt = "gmcpdata = " .. gmcparg --- Convert the serialized string back into a lua table.
         assert (loadstring (luastmt or "")) ()

         if (gmcpdata.chan == "tell" and string.find(gmcpdata.msg, "\'getrank\'") ~= nil) then                 
            tellRequest = true
            tellPlayer = gmcpdata.player
            Execute("getrank " .. tellPlayer)
         end                  
      end         
   end -- onpluginbroadcast

   function Rank(name, line, wildcards)
      local player = wildcards[1]:gsub("^%l", string.upper)

      if baseStats[player] == nil then
         baseStats[player] = { gold = 0, pk = 0, gq = 0, warWin = 0, warKill = 0, level = 0, cp = 0, quest = 0, pup = 0 }
      end

      ColourNote("orange", "", "Finding rank for: ", "cyan", "", player)

      currentStats = {
         name = player,
         rank = "",
         online = true,
         gold = 0, pk = 0, gq = 0, warWin = 0, warKill = 0, level = 0, cp = 0, quest = 0, pup = 0 
      } 

      EnableTriggerGroup("capture", true)

      -- trigger for myrank 16
      local triggerFlags = trigger_flag.Enabled + trigger_flag.KeepEvaluating + trigger_flag.RegularExpression + trigger_flag.OneShot
      local match = "^\\s*[0-9]+\\) who\\s+Loqui\\s+(?<level>[0-9]+)\\s+[0-9]+\\s*[0-9]+\\s*[0-9]+\\s*(?<pup>[0-9]+)\\s*[0-9]+$"

      AddTriggerEx("level_pup" .. player, match:gsub("who", player), "", triggerFlags,
            custom_colour.NoChange, 0, "", "LevelPup", sendto.script, 100)     

      SendNoEcho("whoi " .. player)
      SendNoEcho("warinfo " .. player)
      SendNoEcho("myrank " .. player .. " 16")                 
   end	

   function NotOnline()
      currentStats.online = false
   end

   function CurrentRank(name, line, wildcards)
      currentStats.rank = wildcards.rank
   end

   function QuestGQ(name, line, wildcards)
      currentStats.quest = tonumber(wildcards.quest)
      currentStats.gq = tonumber(wildcards.gq)
   end

   function CP(name, line, wildcards)      
      currentStats.cp = tonumber(wildcards.cp)      
   end

   function PK(name, line, wildcards)
      currentStats.pk = tonumber(wildcards.pk)      
   end

   function War(name, line, wildcards)
      currentStats.warWin = tonumber(wildcards.warWin)      
      currentStats.warKill = tonumber(wildcards.warKill)      
   end   

   function Gold(name, line, wildcards)
      local scrubbed = string.gsub(wildcards[1], ",", "")

      currentStats.gold = tonumber(scrubbed)      
   end

   function LevelPup(name, line, wildcards)
      currentStats.level = tonumber(wildcards.level)      
      currentStats.pup = tonumber(wildcards.pup)      

      wait.make(
         function() 
            wait.time(.1)
            ShowPoints()
         end
      )
   end

   function ShowPoints()
      EnableTriggerGroup("capture", false)   

      if currentStats.online then
         local nameLength = 7         
         if string.len(currentStats.name) > nameLength then nameLength = string.len(currentStats.name) end
         local nameFormatString = "%"..nameLength.."s"

         ColourNote("orange", "", string.format(nameFormatString, currentStats.name),
            "dimgray", "", " | ", 
            "orange", "", " lvl ", "dimgray", "", " | ",
            "orange", "", "  pup  ", "dimgray", "", " | ",
            "orange", "", "quest", "dimgray", "", " | ",
            "orange", "", "  cp  ", "dimgray", "", " | ",
            "orange", "", " gq ", "dimgray", "", " | ",
            "orange", "", " pk ", "dimgray", "", " | ",
            "orange", "", "war win", "dimgray", "", " | ",
            "orange", "", "war kill", "dimgray", "", " | ",
            "orange", "", "gold")      

         ColourNote("dimgray", "", "---------------------------------------------------------------------------------------")

         ColourNote("cyan", "", string.format(nameFormatString, "Joined"), "dimgray", "", " | ",
            "white", "", string.format("%5s", baseStats[currentStats.name].level), "dimgray", "", " | ",
            "white", "", string.format("%7s", baseStats[currentStats.name].pup), "dimgray", "", " | ",
            "white", "", string.format("%5s", baseStats[currentStats.name].quest), "dimgray", "", " | ",
            "white", "", string.format("%6s", baseStats[currentStats.name].cp), "dimgray", "", " | ",
            "white", "", string.format("%4s", baseStats[currentStats.name].gq), "dimgray", "", " | ",
            "white", "", string.format("%4s", baseStats[currentStats.name].pk), "dimgray", "", " | ",
            "white", "", string.format("%7s", baseStats[currentStats.name].warWin), "dimgray", "", " | ",
            "white", "", string.format("%8s", baseStats[currentStats.name].warKill), "dimgray", "", " | ",
            "white", "", string.format("%5s", math.floor(baseStats[currentStats.name].gold) .. "M"))

         ColourNote("cyan", "", string.format(nameFormatString, "Current"), "dimgray", "", " | ",
            "white", "", string.format("%5s", currentStats.level), "dimgray", "", " | ",
            "white", "", string.format("%7s", currentStats.pup), "dimgray", "", " | ",
            "white", "", string.format("%5s", currentStats.quest), "dimgray", "", " | ",
            "white", "", string.format("%6s", currentStats.cp), "dimgray", "", " | ",
            "white", "", string.format("%4s", currentStats.gq), "dimgray", "", " | ",
            "white", "", string.format("%4s", currentStats.pk), "dimgray", "", " | ",
            "white", "", string.format("%7s", currentStats.warWin), "dimgray", "", " | ",
            "white", "", string.format("%8s", currentStats.warKill), "dimgray", "", " | ",
            "white", "", string.format("%5s", math.floor(currentStats.gold/1000000) .. "M"))

         ColourNote("yellow", "", string.format(nameFormatString, "Change"), "dimgray", "", " | ",
            "white", "", string.format("%5s", currentStats.level - baseStats[currentStats.name].level), "dimgray", "", " | ",
            "white", "", string.format("%7s", currentStats.pup - baseStats[currentStats.name].pup), "dimgray", "", " | ",
            "white", "", string.format("%5s", currentStats.quest - baseStats[currentStats.name].quest), "dimgray", "", " | ",
            "white", "", string.format("%6s", currentStats.cp - baseStats[currentStats.name].cp), "dimgray", "", " | ",
            "white", "", string.format("%4s", currentStats.gq - baseStats[currentStats.name].gq), "dimgray", "", " | ",
            "white", "", string.format("%4s", currentStats.pk - baseStats[currentStats.name].pk), "dimgray", "", " | ",
            "white", "", string.format("%7s", currentStats.warWin - baseStats[currentStats.name].warWin), "dimgray", "", " | ",
            "white", "", string.format("%8s", currentStats.warKill - baseStats[currentStats.name].warKill), "dimgray", "", " | ",
            "white", "", string.format("%5s", math.floor((currentStats.gold/1000000-baseStats[currentStats.name].gold)) .. "M"))

         local playersPoints = {
            level = math.floor((currentStats.level - baseStats[currentStats.name].level) * points.level),
            pup = math.floor((currentStats.pup - baseStats[currentStats.name].pup) * points.pup),
            quest = math.floor((currentStats.quest - baseStats[currentStats.name].quest) * points.quest),
            cp = math.floor((currentStats.cp - baseStats[currentStats.name].cp) * points.cp),
            gq = math.floor((currentStats.gq - baseStats[currentStats.name].gq) * points.gq),
            pk = math.floor((currentStats.pk - baseStats[currentStats.name].pk) * points.pk),
            warWin = math.floor((currentStats.warWin - baseStats[currentStats.name].warWin) * points.warWin),
            warKill = math.floor((currentStats.warKill - baseStats[currentStats.name].warKill) * points.warKill),
            gold = math.min(rankNumbers[currentStats.rank] * 100, math.floor((currentStats.gold - (baseStats[currentStats.name].gold)*1000000) * points.gold))            
         }

         if currentStats.name == "Arcidayne" then
            playersPoints.gold = math.floor((currentStats.gold - baseStats[currentStats.name].gold) * points.gold)
         end

         ColourNote("lime", "", string.format(nameFormatString, "Points"), "dimgray", "", " | ",
            "white", "", string.format("%5s", playersPoints.level), "dimgray", "", " | ",
            "white", "", string.format("%7s", playersPoints.pup), "dimgray", "", " | ",
            "white", "", string.format("%5s", playersPoints.quest), "dimgray", "", " | ",
            "white", "", string.format("%6s", playersPoints.cp), "dimgray", "", " | ",
            "white", "", string.format("%4s", playersPoints.gq), "dimgray", "", " | ",
            "white", "", string.format("%4s", playersPoints.pk), "dimgray", "", " | ",
            "white", "", string.format("%7s", playersPoints.warWin), "dimgray", "", " | ",
            "white", "", string.format("%8s", playersPoints.warKill), "dimgray", "", " | ",
            "white", "", string.format("%4s", playersPoints.gold))

         ColourNote("dimgray", "", "---------------------------------------------------------------------------------------")

         local totalPoints = playersPoints.level + playersPoints.pup + 
            playersPoints.quest + playersPoints.cp + playersPoints.gq + 
            playersPoints.pk + playersPoints.warWin + playersPoints.warKill + 
            playersPoints.gold

         local shouldBeRank = "Malcontent"
         local nextRank = nil
         for points, rank in spairs(ranks) do
            if totalPoints >= points then
               shouldBeRank = rank
            end

            if totalPoints < points then
               nextRank = { points = points, rank = rank }
               break
            end
         end

         if currentStats.rank == "Ringleader" then
            shouldBeRank = "Sux0r!"
         end

         ColourTell("orange", "", currentStats.name .. " has ",
            "white", "", tostring(totalPoints),
            "orange", "", " points, is ranked ",
            "cyan", "", currentStats.rank,
            "orange", "", ", should be ranked ",
            "cyan", "", shouldBeRank)

         if nextRank ~= nil then
            ColourTell("orange", "", ", will be ranked ",
            "cyan", "", nextRank.rank,
            "orange", "", " in ",
            "white", "", tostring(nextRank.points - totalPoints),
            "orange", "", " points")
         end

         ColourNote("", "", "")

         if tellRequest then
            local tellStr = "t " .. tellPlayer .. 
               " @x208You have @W" .. totalPoints .." @x208points; ranked @C" .. currentStats.rank .. "@x208; should be ranked @C" .. shouldBeRank               

            if nextRank ~= nil then
               tellStr = tellStr .. "@x208; will be ranked @C" .. nextRank.rank .. "@x208 in @W" .. nextRank.points - totalPoints .. "@x208 points."
            end

            SendNoEcho(tellStr)
            tellRequest = false
         end
      else
         ColourNote("cyan", "", currentStats.name, "orange", "", " is not online.")
      end
   end

   function spairs(t, order)
         -- collect the keys
         local keys = {}
         for k in pairs(t) do keys[#keys+1] = k end

         -- if order function given, sort by it by passing the table and keys a, b,
         -- otherwise just sort the keys 
         if order then
            table.sort(keys, function(a,b) return order(t, a, b) end)
         else
            table.sort(keys)
         end

         -- return the iterator function
         local i = 0
         return function()
            i = i + 1
            if keys[i] then
               return keys[i], t[keys[i]]
            end
         end
      end
]]>
</script>

</muclient>